"use strict";
!function () {
    function a(b, c) {
        if ("undefined" != typeof b && "undefined" != typeof c) {
            var d = c.indexOf(".");
            return d > -1 ? a(b[c.substring(0, d)], c.substr(d + 1)) : b[c]
        }
    }

    function b(a) {
        return angular.injector(["ng"]).invoke([a, function (a) {
            return a
        }])
    }

    function c() {
        var a = b("$q").defer();
        return a.resolve(), a.promise
    }

    function d() {
    }

    function e() {
        return {
            open: !1, disabled: !1, beforeOpen: c, beforeHide: c, animateOpen: function (a) {
                this.body[a]("slow")
            }, animateClose: function (a) {
                this.body[a]()
            }
        }
    }

    function f() {
        this.groups = [], this.options = {closeOthers: !0}
    }

    function g(a) {
        b("$log").error(a)
    }

    function h() {
        return new f
    }

    d.prototype.$animate = function (a, c, d) {
        var e = this;
        b("$q").when(e.options[c]()).then(function () {
            e.options[d].call(e, a)
        }, g)
    }, f.prototype.addGroup = function (a) {
        this.groups.push(a)
    }, f.prototype.getGroups = function () {
        return this.groups
    }, f.prototype.applyState = function (a) {
        a && (a.options.open ? (a.$animate("slideDown", "beforeOpen", "animateOpen"), this.closeOthers(a)) : a.$animate("slideUp", "beforeHide", "animateClose"))
    }, f.prototype.closeOthers = function (a) {
        if (this.options.closeOthers)for (var b = 0; b < this.groups.length; b++)a === this.groups[b] || this.groups[b].hide("slideUp", "beforeHide", "animateClose")
    };
    var i = function () {
        return {
            restrict: "A", link: function (b, c, d, e) {
                var f = a(b, d.options);
                f && angular.extend(e.accordion.options, f), b.$watchCollection(d.options, function (a, b) {
                    a && a !== b && angular.extend(e.accordion.options, a)
                })
            }, controller: function () {
                this.accordion = h()
            }
        }
    }, j = function (a, b) {
        return {
            require: ["^ngAccordion", "ngAccordionGroup"], restrict: "EA", controller: function () {
                var b, c;
                b = a.defer(), c = a.defer(), this.setHeaderElement = function (a) {
                    b.resolve(a)
                }, this.getHeaderElement = function () {
                    return b.promise
                }, this.setBodyElement = function (a) {
                    c.resolve(a)
                }, this.getBodyElement = function () {
                    return c.promise
                }
            }, scope: {options: "="}, link: function (c, f, g, h) {
                var i, j, k, l;
                j = h[1], i = h[0], k = i.accordion, l = new d, c.options || (c.options = e()), l.options = angular.extend(e(), c.options), c.$watchCollection("options", function (a) {
                    l.options = angular.extend(e(), a), a && !a.disabled && k.applyState(l)
                }, !0), a.all([j.getHeaderElement(), j.getBodyElement()]).then(function (a) {
                    l.header = a[0], l.body = a[1], c.options.open ? l.$animate("show", "beforeOpen", "animateOpen") : l.$animate("hide", "beforeHide", "animateClose"), l.header.on("click", function () {
                        c.options.disabled || (c.options.open = !c.options.open), b(function () {
                            c.$apply()
                        })
                    }), k.addGroup(l)
                })
            }
        }
    }, k = function () {
        return {
            require: "^ngAccordionGroup", restrict: "EA", link: function (a, b, c, d) {
                d.setBodyElement(b)
            }
        }
    }, l = function () {
        return {
            require: "^ngAccordionGroup", restrict: "EA", link: function (a, b, c, d) {
                d.setHeaderElement(b)
            }
        }
    };
    angular.module("uiAccordion", []), angular.module("uiAccordion").directive("ngAccordion", i), angular.module("uiAccordion").directive("ngAccordionGroup", j), angular.module("uiAccordion").directive("ngAccordionBody", k), angular.module("uiAccordion").directive("ngAccordionHeading", l)
}();